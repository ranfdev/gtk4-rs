initSidebarItems({"enum":[["X11DeviceType",""]],"fn":[["x11_device_get_id","Returns the device ID as seen by XInput2."],["x11_device_manager_lookup","Returns the [`gdk::Device`][crate::gdk::Device] that wraps the given device ID."],["x11_get_server_time","Routine to get the current X server time stamp."],["x11_get_xatom_by_name_for_display","Returns the X atom for a [`gdk::Display`][crate::gdk::Display] corresponding to @atom_name. This function caches the result, so if called repeatedly it is much faster than XInternAtom(), which is a round trip to the server each time."],["x11_get_xatom_name_for_display","Returns the name of an X atom for its display. This function is meant mainly for debugging, so for convenience, unlike XAtomName() and the result doesn’t need to be freed."],["x11_set_sm_client_id","Sets the `SM_CLIENT_ID` property on the application’s leader window so that the window manager can save the application’s state using the X11R6 ICCCM session management protocol."]],"mod":[["builders","Builder pattern types."],["functions",""]],"struct":[["X11AppLaunchContext","Implements"],["X11DeviceManagerXI2",""],["X11DeviceXI2","Implements"],["X11Display","Implements"],["X11Drag","Implements"],["X11GLContext","This is an Abstract Base Class, you cannot instantiate it."],["X11Monitor","Implements"],["X11Screen",""],["X11Surface","Implements"]]});